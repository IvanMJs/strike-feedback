"use client"

import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { VulnerabilityForm } from "@/components/vulnerability-form"
import { useUpdateVulnerability } from "@/hooks/use-vulnerabilities"
import type { Vulnerability } from "@/types/vulnerability"
import type { VulnerabilityFormData } from "@/lib/validations"

interface VulnerabilityEditModalProps {
  vulnerability: Vulnerability | null
  open: boolean
  onOpenChange: (open: boolean) => void
}

export function VulnerabilityEditModal({ vulnerability, open, onOpenChange }: VulnerabilityEditModalProps) {
  const updateMutation = useUpdateVulnerability()

  const handleSubmit = (data: VulnerabilityFormData) => {
    if (!vulnerability) return

    updateMutation.mutate(
      { id: vulnerability.id, data },
      {
        onSuccess: () => {
          onOpenChange(false)
        },
      },
    )
  }

  if (!vulnerability) return null

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle>Edit Vulnerability</DialogTitle>
          <DialogDescription>Update the vulnerability details and manage its status.</DialogDescription>
        </DialogHeader>
        <VulnerabilityForm
          vulnerability={vulnerability}
          onSubmit={handleSubmit}
          isSubmitting={updateMutation.isPending}
          submitButtonText="Update Vulnerability"
        />
      </DialogContent>
    </Dialog>
  )
}
